parameters:
- name: serviceConnection
  type: string

steps:
- powershell: |
   $path = "$(Pipeline.Workspace)/drop/ConfigurationMigrationData-$(EnvironmentName).zip"
   if(Test-Path $path)
   {
        Write-Host "##vso[task.setvariable variable=ConfigurationMigrationFilePath]$path"
   }
   else
   {
        $path = "$(Pipeline.Workspace)/drop/ConfigurationMigrationData.zip"
        if(Test-Path $path)
        {
            Write-Host "##vso[task.setvariable variable=ConfigurationMigrationFilePath]$path"
        }
        else
        {
            Write-Host "##vso[task.setvariable variable=ConfigurationMigrationFilePath]"
        }
   }
  displayName: 'Check if Configuration Migration Data exists'

- powershell: |
    $microsoftConfigurationMigrationPowerShellModule = '$(Microsoft_Xrm_Tooling_ConfigurationMigration)'
    Import-Module $microsoftConfigurationMigrationPowerShellModule -RequiredVersion $(configurationMigrationPowerShellVersion) -Force
    Export-CrmDataFile -SchemaFile "$(Build.SourcesDirectory)\Config\configuration-data-schema.xml" -DataFile "$(ConfigurationMigrationFilePath)" -CrmConnection "$(CdsBaseConnectionString)${{parameters.serviceConnection}}" -Verbose
  displayName: 'Export Configuration Data'
  condition: and(succeeded(), ne(variables['ConfigurationMigrationFilePath'], ''))
  #skip task if there is no ConfigurationMigrationData in the downloaded artifact