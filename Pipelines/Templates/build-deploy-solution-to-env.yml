# Multi-stage starter template for:
# -Building the solution when changes to the contents of the solution folder are triggered (see trigger-SolutionName.yml for example trigger)
# -Deploying the solution to a specific environment based on pipeline variables
# This is most commonly used for PR Validation where both the build and deploy must suceeed in order for the PR checks to succeed.

parameters:
- name: importUnmanaged
  type: boolean
  default: false
- name: overwriteUnmanagedCustomizations
  type: boolean
  default: false
- name: alignDev
  type: boolean
  default: false

stages:
- stage: build
  displayName: 'Build' 
  jobs:
  - job: build
    pool: 
      vmImage: 'windows-latest'
    steps:
    - ${{ if eq('${{parameters.alignDev}}', 'true') }}:
      - template: unpack-solution.yml
        parameters:
          branch: $(Build.SourceBranchName) #SHOULD BE THE SPRINT/FEATURE BRANCH
          commitMessage: 'Solution package updated as part of deployment process'
          email: $(Build.RequestedForEmail)
          serviceConnection: $(EnvironmentUrl) #SHOULD BE THE SPRINT/FEATURE ENVIRONMENT
          solutionName: $(SolutionName) 
          userName: $(Build.RequestedFor)
    - template: build-solution.yml
      parameters:
        buildType: 'Unmanaged'
        mapCodeComponents: true
- stage: deploy
  displayName: 'Deploy' 
  jobs:
  - job: deploy
    dependsOn: build
    pool: 
      vmImage: 'windows-latest'
    steps:
    - template: deploy-solution.yml
      parameters:
        serviceConnection: '$(EnvironmentUrl)'
        importUnmanaged: ${{parameters.importUnmanaged}}
        overwriteUnmanagedCustomizations: ${{parameters.overwriteUnmanagedCustomizations}}
        skipBuildToolsInstaller: true